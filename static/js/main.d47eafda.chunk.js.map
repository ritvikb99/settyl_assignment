{"version":3,"sources":["constants.js","Components/Card/Card.js","Components/CardsList/CardsList.js","Components/SearchBox/SearchBox.js","Components/Scroll/Scroll.js","Components/AddUserComponent/AddUserComponent.js","actions.js","data.js","Components/ShowChartComponent/ShowChartComponent.js","App.js","serviceWorker.js","reducers.js","index.js"],"names":["CHANGE_SEARCHFIELD","REQUEST_USERS_PENDING","REQUEST_USERS_SUCCESS","REQUEST_USERS_FAILED","ADD_USER","Card","props","name","id","email","username","phone","website","useState","isVisible","setIsVisible","className","onClick","src","alt","style","color","CardsList","users","map","user","SearchBox","searchChange","type","placeholder","onChange","Scroll","children","connect","state","requestUsers","dispatch","addUser","payload","recievedName","setRecievedName","recievedUsername","setRecievedUsername","recievedEmail","setRecievedEmail","recievedPhone","setRecievedPhone","recievedWebsite","setRecievedWebsite","htmlFor","event","target","value","length","newUsers","push","list","document","getElementsByClassName","skills","label","labels","data","hobbies","ShowChartComponent","chartData","setChartData","datasets","backgroundColor","borderColor","borderWidth","height","options","maintainAspectRatio","scales","yAxes","ticks","beginAtZero","searchField","searchUsers","error","isPending","onSearchChange","text","onRequestUsers","fetch","then","response","json","catch","useEffect","filteredUsers","filter","toLowerCase","includes","isAddUserClicked","setIsAddUserClicked","isShowChartClicked","setIsShowChartClicked","Boolean","window","location","hostname","match","initialStateSearch","initialStateUsers","logger","createLogger","rootReducer","combineReducers","action","Object","assign","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.d47eafda.chunk.js","sourcesContent":["export const CHANGE_SEARCHFIELD = 'CHANGE_SEARCHFIELD';\n\nexport const REQUEST_USERS_PENDING = 'REQUEST_USERS_PENDING';\nexport const REQUEST_USERS_SUCCESS = 'REQUEST_USERS_SUCCESS';\nexport const REQUEST_USERS_FAILED = 'REQUEST_USERS_FAILED';\n\nexport const ADD_USER = 'ADD_USER';\n","import React, { useState } from 'react';\nimport './Card.css';\n\nconst Card = (props) => {\n  const { name, id, email, username, phone, website } = props;\n  const [isVisible, setIsVisible] = useState(false);\n  const onCardClick = () => {\n    if (isVisible === false) {\n      setIsVisible(true);\n    } else {\n      setIsVisible(false);\n    }\n  };\n  return (\n    <div className='tc card dib br3 pa3 ma2 grow bw2 shadow-5' onClick={onCardClick}>\n      <img src={`https://robohash.org/${id}?set=set2`} alt={`${name} Profile Pic`} />\n      <div>\n        <h2>{name}</h2>\n        <div className={isVisible ? 'show' : 'hidden'}>\n          <p>\n            <span style={{ color: 'maroon' }}>Username:</span> {username}\n          </p>\n          <p>\n            <span style={{ color: 'maroon' }}>Email:</span> {email}\n          </p>\n          <p>\n            <span style={{ color: 'maroon' }}>Phone:</span> {phone}\n          </p>\n          <p>\n            <span style={{ color: 'maroon' }}>Website:</span> {website}\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\nimport Card from '../Card/Card';\n\nconst CardsList = ({ users }) => {\n  let cardsArray = users.map((user) => {\n    return (\n      <Card\n        key={user.id}\n        id={user.id}\n        name={user.name}\n        email={user.email}\n        username={user.username}\n        phone={user.phone}\n        website={user.website}\n      />\n    );\n  });\n  return cardsArray;\n};\n\nexport default CardsList;\n","import React from 'react';\nimport './SearchBox.css';\n\nconst SearchBox = ({ searchChange }) => {\n  return <input className='pa2 ba br-pill' type='search' placeholder='Search Users' onChange={searchChange} />;\n};\n\nexport default SearchBox;\n","import React from 'react';\nimport './Scroll.css';\n\nconst Scroll = (props)=>{\n    return(\n        <div id=\"scroll\">\n            {props.children}\n        </div>\n    );\n}\n\nexport default Scroll;","import React, { useState } from 'react';\nimport { addUser } from '../../actions';\nimport { connect } from 'react-redux';\nimport './AddUserComponent.css';\n\nconst mapStateToProps = (state) => {\n  return {\n    users: state.requestUsers.users,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addUser: (users) => {\n      dispatch(addUser(users));\n    },\n  };\n};\n\nconst AddUserComponent = (props) => {\n  const [recievedName, setRecievedName] = useState('');\n  const [recievedUsername, setRecievedUsername] = useState('');\n  const [recievedEmail, setRecievedEmail] = useState('');\n  const [recievedPhone, setRecievedPhone] = useState('');\n  const [recievedWebsite, setRecievedWebsite] = useState('');\n\n  const onSubmitButton = () => {\n    const user = {\n      id: props.users[props.users.length - 1].id + 1,\n      name: recievedName,\n      email: recievedEmail,\n      username: recievedUsername,\n      website: recievedWebsite,\n      phone: recievedPhone,\n    };\n\n    let newUsers = [...props.users];\n    newUsers.push(user);\n    props.addUser(newUsers);\n    let list = document.getElementsByClassName('resetable');\n    for (let element of list) {\n      element.value = '';\n    }\n  };\n\n  const onNameChange = (event) => {\n    setRecievedName(event.target.value);\n  };\n  const onUsernameChange = (event) => {\n    setRecievedUsername(event.target.value);\n  };\n  const onEmailChange = (event) => {\n    setRecievedEmail(event.target.value);\n  };\n  const onPhoneChange = (event) => {\n    setRecievedPhone(event.target.value);\n  };\n  const onWebsiteChange = (event) => {\n    setRecievedWebsite(event.target.value);\n  };\n  return (\n    <div className='container'>\n      <div className='main br4'>\n        <div className='inputWrapper'>\n          <label htmlFor='name'>Name</label>\n          <br></br>\n          <input\n            className='addUser br3 pa2 input-reset ba bg-transparent hover-white w-100 resetable'\n            onChange={onNameChange}\n            type='text'\n            name='name'\n          ></input>\n          <br />\n        </div>\n        <div className='inputWrapper'>\n          <label htmlFor='email'>Email</label>\n          <br></br>\n          <input\n            className='addUser br3 pa2 input-reset ba bg-transparent hover-white w-100 resetable'\n            onChange={onEmailChange}\n            type='email'\n            name='email'\n          ></input>\n          <br />\n        </div>\n        <div className='inputWrapper'>\n          <label htmlFor='username'>Username</label>\n          <br></br>\n          <input\n            className='addUser br3 pa2 input-reset ba bg-transparent hover-white w-100 resetable'\n            onChange={onUsernameChange}\n            type='text'\n            name='username'\n          ></input>\n          <br />\n        </div>\n        <div className='inputWrapper br3'>\n          <label htmlFor='phone'>Phone</label>\n          <br></br>\n          <input\n            className='addUser br3 pa2 input-reset ba bg-transparent hover-white w-100 resetable'\n            onChange={onPhoneChange}\n            type='text'\n            name='phone'\n          ></input>\n          <br />\n        </div>\n        <div className='inputWrapper'>\n          <label htmlFor='website'>Website</label>\n          <br></br>\n          <input\n            className='addUser br3 pa2 input-reset ba bg-transparent hover-white w-100 resetable'\n            onChange={onWebsiteChange}\n            type='text'\n            name='webste'\n          ></input>\n          <br />\n        </div>\n        <br></br>\n        <br></br>\n        <button className='white grow b pv2 ph3 hover-bg-near-black bn br3 hover-shadow-inner' onClick={onSubmitButton}>\n          Click to Add\n        </button>\n        <br />\n        <br />\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddUserComponent);\n","import { CHANGE_SEARCHFIELD, REQUEST_USERS_PENDING, REQUEST_USERS_SUCCESS, REQUEST_USERS_FAILED, ADD_USER } from './constants';\n\nexport const setSearchField = (text) => ({\n  type: CHANGE_SEARCHFIELD,\n  payload: text,\n});\n//requestUsers = (dispatch) => {}          ALT_FOR_BELOW\nexport const requestUsers = () => (dispatch) => {\n  dispatch({ type: REQUEST_USERS_PENDING });\n  fetch('https://jsonplaceholder.typicode.com/users')\n    .then((response) => response.json())\n    .then((data) => dispatch({ type: REQUEST_USERS_SUCCESS, payload: data }))\n    .catch((error) => dispatch({ type: REQUEST_USERS_FAILED, payload: error }));\n};\n\nexport const addUser = (users) => ({\n  type: ADD_USER,\n  payload: users,\n});\n","export const skills = {\n  label: 'My Skills Rated',\n  labels: ['React', 'NodeJs', 'Redux', 'Python', 'Machine Learning', 'C++'],\n  data: [10, 9, 7, 10, 8, 5],\n};\n\nexport const hobbies = {\n  label: 'How much I like these activities',\n  labels: ['Football', 'Playing Mendolin', 'Coding', 'Dancing', 'Cricket', 'Parkour'],\n  data: [10, 5, 10, 4, 3, 9],\n};\n","import React, { useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport './ShowChartComponent.css';\nimport { skills, hobbies } from '../../data';\n\nconst ShowChartComponent = ({ users }) => {\n  const [chartData, setChartData] = useState(skills);\n  const dataSelector = (event) => {\n    switch (event.target.value) {\n      case 'skills':\n        setChartData(skills);\n        break;\n      case 'hobbies':\n        setChartData(hobbies);\n        break;\n      default:\n        setChartData(skills);\n        break;\n    }\n  };\n  return (\n    <div className='container'>\n      <div className='inner'>\n        <label className='f4' htmlFor='labelSelector'>\n          Chart To Display:{' '}\n        </label>\n        <select id='labelSelector' name='labelSelector' onChange={dataSelector}>\n          <option value='skills'>Candidate's Skills</option>\n          <option value='hobbies'>Candidate's Hobbies</option>\n        </select>\n        <hr />\n        <Bar\n          data={{\n            labels: chartData.labels,\n            datasets: [\n              {\n                label: chartData.label,\n                data: chartData.data,\n                backgroundColor: [\n                  'rgba(255, 99, 132, 0.2)',\n                  'rgba(54, 162, 235, 0.2)',\n                  'rgba(255, 206, 86, 0.2)',\n                  'rgba(75, 192, 192, 0.2)',\n                  'rgba(153, 102, 255, 0.2)',\n                  'rgba(255, 159, 64, 0.2)',\n                ],\n                borderColor: [\n                  'rgba(255, 99, 132, 1)',\n                  'rgba(54, 162, 235, 1)',\n                  'rgba(255, 206, 86, 1)',\n                  'rgba(75, 192, 192, 1)',\n                  'rgba(153, 102, 255, 1)',\n                  'rgba(255, 159, 64, 1)',\n                ],\n                borderWidth: 1,\n              },\n            ],\n          }}\n          height={200}\n          options={{\n            maintainAspectRatio: false,\n            scales: {\n              yAxes: [\n                {\n                  ticks: {\n                    beginAtZero: true,\n                  },\n                },\n              ],\n            },\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default ShowChartComponent;\n","import React, { Fragment, useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { setSearchField, requestUsers } from './actions';\nimport './App.css';\nimport CardsList from './Components/CardsList/CardsList';\nimport SearchBox from './Components/SearchBox/SearchBox';\nimport Scroll from './Components/Scroll/Scroll';\nimport AddUserComponent from './Components/AddUserComponent/AddUserComponent';\nimport ShowChartComponent from './Components/ShowChartComponent/ShowChartComponent';\n\nconst mapStateToProps = (state) => {\n  return {\n    searchField: state.searchUsers.searchField,\n    users: state.requestUsers.users,\n    error: state.requestUsers.error,\n    isPending: state.requestUsers.isPending,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onSearchChange: (event) => {\n      dispatch(setSearchField(event.target.value));\n    },\n    onRequestUsers: () => {\n      dispatch(requestUsers()); //requestUsers(dispatch)    ALT\n    },\n  };\n};\n\nconst App = (props) => {\n  useEffect(() => {\n    props.onRequestUsers();\n    // eslint-disable-next-line\n  }, []);\n  let filteredUsers = props.users.filter((user) => {\n    return user.name.toLowerCase().includes(props.searchField.toLowerCase());\n  });\n\n  const [isAddUserClicked, setIsAddUserClicked] = useState(false);\n  const [isShowChartClicked, setIsShowChartClicked] = useState(false);\n\n  const onAddUserClick = () => {\n    if (isAddUserClicked) {\n      setIsAddUserClicked(false);\n    } else {\n      setIsShowChartClicked(false);\n      setIsAddUserClicked(true);\n    }\n  };\n\n  const onShowChartClick = () => {\n    if (isShowChartClicked) {\n      setIsShowChartClicked(false);\n    } else {\n      setIsAddUserClicked(false);\n      setIsShowChartClicked(true);\n    }\n  };\n\n  return (\n    <Fragment>\n      <div className='tc'>\n        <nav className='sticky'>\n          <h1 className='f1'>SETTYL</h1>\n\n          <div>\n            <SearchBox searchChange={props.onSearchChange} />\n          </div>\n          <br></br>\n          <hr />\n        </nav>\n        {isAddUserClicked ? <AddUserComponent /> : <br />}\n        {isShowChartClicked ? <ShowChartComponent /> : <br />}\n        <div className='buttons'>\n          <button className='f6 grow no-underline br-pill ph3 pv2 mb2 dib near-black bg-white' onClick={onAddUserClick}>\n            Add User\n          </button>\n          <button className='f6 grow no-underline br-pill ph3 pv2 mb2 dib near-black bg-white' onClick={onShowChartClick}>\n            Show Chart\n          </button>\n        </div>\n        <Scroll>\n          <CardsList users={filteredUsers} />\n        </Scroll>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { CHANGE_SEARCHFIELD, REQUEST_USERS_PENDING, REQUEST_USERS_SUCCESS, REQUEST_USERS_FAILED, ADD_USER } from './constants';\n\nconst initialStateSearch = {\n  searchField: '',\n};\n\nexport const searchUsers = (state = initialStateSearch, action = {}) => {\n  switch (action.type) {\n    case CHANGE_SEARCHFIELD:\n      return Object.assign({}, state, { searchField: action.payload });\n\n    default:\n      return state;\n  }\n};\n\nconst initialStateUsers = {\n  isPending: false,\n  error: '',\n  users: [],\n};\n\nexport const requestUsers = (state = initialStateUsers, action = {}) => {\n  switch (action.type) {\n    case REQUEST_USERS_PENDING:\n      return Object.assign({}, state, { isPending: true });\n    case REQUEST_USERS_SUCCESS:\n      return Object.assign({}, state, { isPending: false, users: action.payload });\n    case REQUEST_USERS_FAILED:\n      return Object.assign({}, state, { error: action.payload, isPending: false });\n    case ADD_USER:\n      return Object.assign({}, state, { users: action.payload });\n    default:\n      return state;\n  }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunkMiddleware from 'redux-thunk';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\nimport { searchUsers, requestUsers } from './reducers';\n\nconst logger = createLogger();\nconst rootReducer = combineReducers({ searchUsers, requestUsers });\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware, logger));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}